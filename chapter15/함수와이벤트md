두 수를 더하는 함수 만들기
```
<script>
function addNumber(a.b){
  var sum = a + b;
  alert(sum);
  }
  </script>
  ```
  
  var를 사용한 변수
  지역 변수 : 한 함수 안에서만 사용할 수 있는 변수
  전역 변수 : 스크립트 소스 전체에서 사용할 수 있는 변수
  
  var 예약어를 사용한 지역 변수와 전역 변수
  ```
  <script>
    function addNumber() {
    var sum = 10 + 20;
    multi = 10 * 20;
    }
    addNumber();
    console.log(multi);
    </script>
    ```
    
 - 전역 변수는 최소한으로 사용
 - var 변수는 함수의 시작 부분에서 선언
 - for 문에서 카운터 변수를 사용할 때는 var 예약어를 사용하지 않음
 - ES6를 사용한다면 예약어 var보다 let를 사용하는 것이 좋음
 
 <1부터 n까지 숫자를 더하는 함수>
 
 ```
 <script>
 fumction calsSum(n){
 
 }
 </script>
 ```
 
 ```
 <script>
  function calcSum(n) {
    var sum = 0;
    
    for(let i = 1; i < n+1; i++) {
      sum += i;
    }
    document.write("1부터 " + n + "까지 더하면 " + sum);
  }
  var var userNumber = prompt("얼마까지 더할까요?");
    if (userNumber !== null) {
      calcSum(parseInt(userNumber));
    }
  </script>
  ```
  
  <마우스 이벤트>
  click : 사용자가 HTML 요소를 클릭할 때 이벤트가 발생함
  dbclick : 사용자가 HTML 요소를 더블클릭할 때 이벤트가 발생함
  mousedown : 사용자가 요소 위에서 마우스 버튼을 눌렀을 때 이벤트가 발생함
  mousemove : 사용자가 요소 위에서 마우스 포인터를 움직일 때 이벤트가 발생함
  mouseover : 마우스 포인터가 요소 위로 옮겨질 때 이벤트가 발생함
  mouseout :  마우스 포인터가 요소를 벗어날 때 이벤트가 발생함
  mouseup : 사용자가 요소 위에 놓인 마우스 버튼에서 손을 뗄 때 이벤트가 발생함
  
  <키보드 이벤트>
  keydown : 사용자가 키를 누르는 동안 이벤트가 발생함
  keypress : 사용자가 키를 눌렀을 때 이벤트가 발생함
  keyup : 사용자가 키에서 손을 뗄 때 이벤트가 발생함
  
  <문서 로딩 이벤트>
  abort : 문서가 완전히 로딩되기 전에 불러오기를 멈췄을 때 이벤트가 발생함
  error : 문서가 정확히 로딩되지 않았을 때 이벤트가 발생함
  load : 문서 로딩이 끝나면 이벤트가 발생함
  resize : 문서 화면 크기가 바뀌었을 때 이벤트가 발생함
  scroll : 문서 화면이 스크롤되었을 때 이벤트가 발생함
  unload : 문서에서 벗어날 때 이벤트가 발생함
  
  <폼 이벤트>
  blur : 폼 요소에 포커스를 잃었을 때 이벤트가 발생함
  change : 목록이나 체크 상태 등이 변경되면 이벤트가 발생함. <input>, <select>, <textarea>태그에서 사용함
  focus : 폼 요소에 포커스가 놓였을 때 이벤트가 발생함. <label>, <select>, <textarea>, <button>태그에서 사용함
  reset : 폼이 리셋되었을 때 이벤트가 발생함
  submit : submit 버튼을 클릭했을 때 이벤트가 발생함
  
